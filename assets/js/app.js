// Pokud chce≈° pou≈æ√≠t Phoenix kan√°ly, odkomentuj ≈ô√°dek n√≠≈æe
// import "./user_socket.js"

// P≈ôid√°v√° phoenix_html pro podporu metod PUT/DELETE ve formul√°≈ô√≠ch
import "phoenix_html"

// P≈ôipojen√≠ k Phoenix LiveView
import { Socket } from "phoenix"
import { LiveSocket } from "phoenix_live_view"
import topbar from "../vendor/topbar"

// ‚úÖ P≈ôid√°v√°me hook pro kop√≠rov√°n√≠ do clipboardu
let Hooks = {};

Hooks.Clipboard = {
  mounted() {
    console.log("üìã Clipboard Hook Mounted!"); // ‚úÖ Debug v√Ωpis
    this.el.addEventListener("click", (event) => {
      let text = this.el.getAttribute("phx-value-token"); // ‚úÖ Opraven√Ω atribut
      console.log("üñ±Ô∏è Copy Button Clicked!", text); // ‚úÖ Debug v√Ωpis

      if (!text || text.trim() === "") {
        console.error("‚ö†Ô∏è Kop√≠rov√°n√≠ selhalo: ≈Ω√°dn√Ω token nenalezen!");
        return;
      }

      navigator.clipboard.writeText(text).then(() => {
        console.log("‚úÖ Token zkop√≠rov√°n:", text);
        this.el.classList.add("copied");
        setTimeout(() => this.el.classList.remove("copied"), 2000);
      }).catch(err => console.error("‚ùå Kop√≠rov√°n√≠ selhalo:", err));
    });
  }
};

// Naƒçten√≠ CSRF tokenu
let csrfToken = document.querySelector("meta[name='csrf-token']").getAttribute("content")

// Nastaven√≠ LiveView
let liveSocket = new LiveSocket("/live", Socket, {
  longPollFallbackMs: 2500,
  params: { _csrf_token: csrfToken },
  hooks: Hooks  // ‚úÖ P≈ôid√°n√≠ Clipboard hooku
})

// Zobrazen√≠ progress baru p≈ôi naƒç√≠t√°n√≠ str√°nky
topbar.config({ barColors: { 0: "#29d" }, shadowColor: "rgba(0, 0, 0, .3)" })
window.addEventListener("phx:page-loading-start", _info => topbar.show(300))
window.addEventListener("phx:page-loading-stop", _info => topbar.hide())

// P≈ôipojen√≠ k LiveView, pokud je str√°nka aktivn√≠
liveSocket.connect()

// Umo≈ænƒõn√≠ debugov√°n√≠ v konzoli
window.liveSocket = liveSocket
